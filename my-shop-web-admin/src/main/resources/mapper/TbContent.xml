<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--指向数据访问层接口-->
<mapper namespace="com.lu.ming.shop.web.admin.dao.TbContentDao">
    <!--    映射文件，简称为 Mapper，主要完成 DAO 层中 SQL 语句的映射。映射文件名随意，-->
    <!--    一般放在 src/resources/mapper 文件夹中。这里映射文件名称定为 TbUserMapper.xml-->
    <!--    关系映射里的查询sql语句的别名要和实体类的名字一样。-->
    <sql id="tbContentColumns">
        a.id,
        a.category_id AS categoryId,
        a.title,
        a.sub_title AS subTitle,
        a.title_desc AS titleDesc,
        a.url,
        a.pic,
        a.pic2,
        a.content,
        a.created,
        a.updated,
        b.id AS "tbContentCategory.id",
        b.name AS "tbContentCategory.name"
    </sql>

    <sql id="tbContentJoins">
        LEFT JOIN tb_content_category AS b on a.category_id = b.id
    </sql>

    <select id="selectAll" resultType="TbContent">
        SELECT
        <include refid="tbContentColumns"/>
        FROM tb_content AS a
        <include refid="tbContentJoins"/>
    </select>

    <select id="insert" resultType="TbContent">
        INSERT INTO `tb_content`
                (
                    `category_id`,
                    `title`,
                    `sub_title`,
                    `title_desc`,
                    `url`,
                    `pic`,
                    `pic2`,
                    `content`,
                    `created`,
                    `updated`
                )
                VALUES
                (
                    #{tbContentCategory.id},
                    #{title},
                    #{subTitle},
                    #{titleDesc},
                    #{url},
                    #{pic},
                    #{pic2},
                    #{content},
                    #{created},
                    #{updated}
                );
    </select>

    <select id="delete">
        DELETE FROM tb_content
        WHERE
        `id` = #{id};
    </select>

    <select id="findById" resultType="TbContent">
        SELECT
        <include refid="tbContentColumns"/>
        FROM tb_content AS a
        <include refid="tbContentJoins"/>
        WHERE a.id= #{id};
    </select>

    <select id="update" resultType="TbContent">
        UPDATE `tb_content`
            SET
            `category_id` = #{tbContentCategory.id},
            `title` = #{title},
            `sub_title` = #{subTitle},
            `title_desc` = #{titleDesc},
            `url` = #{url},
            `pic` = #{pic},
            `pic2` = #{pic2},
            `content` = #{content},
            `created` = #{created},
            `updated` = #{updated}
        WHERE
            id = #{id};
    </select>

    <!--    批量删除-->
    <delete id="deleteArray">
        DELETE FROM tb_content
        where id in
        <foreach collection="array" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>
    <!--    分页操作 注意这里面的pageParams是AbstractBaseServiceimpl中page方法里的key值pageParams-->
    <select id="page" resultType="TbContent" parameterType="java.util.Map">
        SELECT
        <include refid="tbContentColumns"/>
        FROM tb_content AS a
        <include refid="tbContentJoins"/>
        <where>
            <if test="pageParams.title != null and pageParams.title != ''">
                AND a.title LIKE CONCAT ('%',#{pageParams.title},'%')
            </if>
            <if test="pageParams.subTitle != null and pageParams.subTitle != ''">
                AND a.sub_title LIKE CONCAT ('%',#{pageParams.subTitle},'%')
            </if>
            <if test="pageParams.titleDesc != null and pageParams.titleDesc != ''">
                AND a.title_desc LIKE CONCAT ('%',#{pageParams.titleDesc},'%')
            </if>
        </where>
        LIMIT #{start},#{length}
    </select>
    <!--    查询总记录数-->
    <select id="count" resultType="java.lang.Integer">
        select COUNT(*) from tb_content as a
        <where>
            <if test="title != null and title != ''">
                AND a.title LIKE CONCAT ('%',#{title},'%')
            </if>
            <if test="subTitle != null and subTitle != ''">
                AND a.sub_title LIKE CONCAT ('%',#{subTitle},'%')
            </if>
            <if test="titleDesc != null and titleDesc != ''">
                AND a.title_desc LIKE CONCAT ('%',#{titleDesc},'%')
            </if>
        </where>
    </select>
</mapper>